{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./scripts/export/api.js","webpack:///./scripts/export/card.js","webpack:///./scripts/export/modal.js","webpack:///./scripts/export/validation.js","webpack:///./scripts/index.js"],"sourcesContent":["export const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-35\",\r\n  headers: {\r\n    authorization: \"7d3479a9-b3a4-4ebe-9dbb-b115b05a7b60\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const selfProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n};\r\n\r\nexport function editSelfProfile(nameInput, jobInput, loading, button) {\r\n  fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameInput,\r\n      about: jobInput,\r\n    }),\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .finally(() => {\r\n      loading(false, button);\r\n    });\r\n}\r\n\r\nexport const updateImageProfile = (avatarProfile, loading, button) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarProfile,\r\n    }),\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .finally(() => {\r\n      loading(false, button);\r\n    });\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n};\r\n\r\nexport function postOwnCard(\r\n  newCard,\r\n  imagePopup,\r\n  likeCard,\r\n  myId,\r\n  deleteCard,\r\n  placesContainer,\r\n  createCard,\r\n  loading,\r\n  button\r\n) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify(newCard),\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((data) => {\r\n      placesContainer.prepend(\r\n        createCard(data, imagePopup, likeCard, myId, deleteCard)\r\n      );\r\n    })\r\n    .finally(() => {\r\n      loading(false, button);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport function deleteOwnCard(cardId, card) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (res.ok) {\r\n      card.remove();\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\nexport function putLike(cardId, likesCount, likeButton) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((data) => {\r\n      likesCount.textContent = data.likes.length;\r\n      likeButton.classList.add(\"card__like-button_is-active\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport function deleteLike(cardId, likesCount, likeButton) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((data) => {\r\n      likeButton.classList.remove(\"card__like-button_is-active\");\r\n      likesCount.textContent = data.likes.length;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n","import { deleteOwnCard, putLike, deleteLike } from \"./api.js\";\r\n\r\n//Функция создания карточки\r\nexport function createCard(\r\n  card,\r\n  imageFullScreen,\r\n  likeCard,\r\n  userId,\r\n  removeCard\r\n) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardName = cardElement.querySelector(\".card__title\");\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const cardLikesCount = cardElement.querySelector(\".card__likes-count\");\r\n\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  cardName.textContent = card.name;\r\n  cardLikesCount.textContent = card.likes.length;\r\n\r\n  const isLikedByMe = checkLike(card, userId);\r\n\r\n  if (isLikedByMe) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  cardLikeButton.addEventListener(\"click\", () => {\r\n    likeCard(cardLikeButton, card._id, cardLikesCount, userId);\r\n  });\r\n\r\n  if (card.owner._id == userId) {\r\n    deleteButton.addEventListener(\"click\", () => {\r\n      removeCard(deleteButton, card._id);\r\n    });\r\n  } else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    imageFullScreen(cardImage);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n//Проверка на наличие лайка\r\nfunction checkLike(card, userId) {\r\n  return card.likes.some((like) => like._id === userId);\r\n}\r\n\r\n//Функция удаления карточки\r\nexport function deleteCard(button, cardId) {\r\n  const closestCard = button.closest(\".card\");\r\n\r\n  deleteOwnCard(cardId, closestCard);\r\n}\r\n\r\n//Функция \"лайка\" карточки\r\nexport function likeCard(likeButton, cardId, likesCount) {\r\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\");\r\n\r\n  if (!isLiked) {\r\n    putLike(cardId, likesCount, likeButton);\r\n  } else {\r\n    deleteLike(cardId, likesCount, likeButton);\r\n  }\r\n}\r\n","//Функция открытия попапа\r\nexport function openModal(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", setEscToCloseModal);\r\n}\r\n\r\n//Функция закрытия попапа\r\nexport function closeModal(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", setEscToCloseModal);\r\n}\r\n\r\n//Функция закрытия попапа при нажатии на ESC\r\nfunction setEscToCloseModal(evt) {\r\n  if (evt.key === \"Escape\") {\r\n   const popup = document.querySelector(\".popup_is-opened\");\r\n   if (popup) {\r\n      closeModal(popup);\r\n    }\r\n  }\r\n} \r\n\r\n//Функция закрытия попапа при клике по области\r\nexport function setClickOnOverlayToCloseModal(evt) {\r\n  if (evt.target.classList.contains(\"popup_is-opened\")) {\r\n    closeModal(evt.target);\r\n  }\r\n} \r\n","export function enableValidation(config) {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  const button = config.submitButtonSelector;\r\n  const inputClass = config.inputSelector;\r\n  const inputErrorClassVisible = config.inputErrorClass;\r\n  const errorClassVisible = config.errorClass;\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(\r\n      formElement,\r\n      button,\r\n      inputClass,\r\n      inputErrorClassVisible,\r\n      errorClassVisible\r\n    );\r\n  });\r\n}\r\n\r\nfunction setEventListeners(\r\n  formElement,\r\n  button,\r\n  inputClass,\r\n  inputErrorClassVisible,\r\n  errorClassVisible\r\n) {\r\n  const inputList = Array.from(formElement.querySelectorAll(`${inputClass}`));\r\n  const buttonElement = formElement.querySelector(button);\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(\r\n        formElement,\r\n        inputElement,\r\n        inputErrorClassVisible,\r\n        errorClassVisible\r\n      );\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n}\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nfunction checkInputValidity(\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClassVisible,\r\n  errorClassVisible\r\n) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  const errorMessage = inputElement.dataset.errorMessage;\r\n\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      inputElement,\r\n      inputErrorClassVisible,\r\n      errorElement,\r\n      errorClassVisible\r\n    );\r\n  } else {\r\n    hideInputError(\r\n      inputElement,\r\n      inputErrorClassVisible,\r\n      errorElement,\r\n      errorClassVisible\r\n    );\r\n  }\r\n}\r\n\r\nfunction showInputError(\r\n  inputElement,\r\n  inputErrorClassVisible,\r\n  errorElement,\r\n  errorClassVisible\r\n) {\r\n  inputElement.classList.add(`${inputErrorClassVisible}`);\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  errorElement.classList.add(`${errorClassVisible}`);\r\n}\r\n\r\nfunction hideInputError(\r\n  inputElement,\r\n  inputErrorClassVisible,\r\n  errorElement,\r\n  errorClassVisible\r\n) {\r\n  inputElement.classList.remove(`${inputErrorClassVisible}`);\r\n  errorElement.textContent = \"\";\r\n  errorElement.classList.add(`${errorClassVisible}`);\r\n}\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nexport function clearValidation(form, config) {\r\n  const formInputs = form.querySelectorAll(`${config.inputSelector}`);\r\n  const errorClass = config.errorClass;\r\n  const inputErrorClass = config.inputErrorClass;\r\n  const errorElements = form.querySelectorAll(\".popup__input-error\");\r\n  const submitButton = form.querySelector(`${config.submitButtonSelector}`);\r\n\r\n  formInputs.forEach((formInputElement) => {\r\n    formInputElement.classList.remove(inputErrorClass);\r\n    if (\r\n      formInputElement.length >= 1 &&\r\n      formInputElement.classList.contains(`${inputErrorClass}`)\r\n    ) {\r\n      formInputElement.value = \"\";\r\n      formInputElement.classList.remove(inputErrorClass);\r\n    } else {\r\n      formInputElement.classList.remove(inputErrorClass);\r\n    }\r\n  });\r\n\r\n  errorElements.forEach((errorElement) => {\r\n    errorElement.classList.remove(errorClass);\r\n    errorElement.textContent = \"\";\r\n  });\r\n\r\n  submitButton.disabled = true;\r\n}\r\n","import \"../pages/index.css\";\r\n\r\nimport { createCard, deleteCard, likeCard } from \"./export/card.js\";\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  setClickOnOverlayToCloseModal,\r\n} from \"./export/modal.js\";\r\nimport {\r\n  selfProfile,\r\n  editSelfProfile,\r\n  updateImageProfile,\r\n  postOwnCard,\r\n  getInitialCards,\r\n} from \"./export/api.js\";\r\nimport { enableValidation, clearValidation } from \"./export/validation.js\";\r\n\r\nconst placesContainer = document.querySelector(\".places__list\");\r\nconst editProfileButton = document.querySelector(\".profile__edit-button\");\r\nconst profilePopup = document.querySelector(\".popup_type_edit\");\r\nconst nameProfile = document.querySelector(\".profile__title\");\r\nconst jobProfile = document.querySelector(\".profile__description\");\r\nconst addCardButton = document.querySelector(\".profile__add-button\");\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst nameInput = editProfileForm.elements.name;\r\nconst jobInput = editProfileForm.elements.description;\r\nconst editProfilePopupButton = editProfileForm.querySelector(\".popup__button\");\r\nconst newCardPopup = document.querySelector(\".popup_type_new-card\");\r\nconst addCardForm = document.forms[\"new-place\"];\r\nconst addCardPopupButton = addCardForm.querySelector(\".popup__button\");\r\nconst addCardNameInput = addCardForm.elements[\"place-name\"];\r\nconst addCardLinkInput = addCardForm.elements.link;\r\nconst allPopups = document.querySelectorAll(\".popup\");\r\nconst imgPopup = document.querySelector(\".popup_type_image\");\r\nconst image = imgPopup.querySelector(\".popup__image\");\r\nconst imageCaption = imgPopup.querySelector(\".popup__caption\");\r\nconst imageProfilePopup = document.querySelector(\".popup_type_profile-image\");\r\nconst imageProfileContainer = document.querySelector(\".profile__image\");\r\nconst imageProfile = document.querySelector(\".profile__update_image\");\r\nconst editProfileImageForm = document.forms[\"edit-image\"];\r\nconst imageProfilePopupButton =\r\n  editProfileImageForm.querySelector(\".popup__button\");\r\n\r\nconst valueForSubmitButtons = \"Сохранить\";\r\nconst valueForLoadingSubmitButtons = \"Сохранение...\";\r\n\r\n//Настройки валидации форм\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n//Вызов валидации\r\nenableValidation(validationConfig);\r\n\r\n//Запросы на сервер\r\nconst profileConfig = selfProfile();\r\nconst cardsConfig = getInitialCards();\r\n\r\n//Переменная для глобального хранения ID профиля\r\nlet myId;\r\n\r\n//Промисы запросов\r\nPromise.all([profileConfig, cardsConfig])\r\n  .then(([userData, cardsData]) => {\r\n    myId = userData._id;\r\n\r\n    nameProfile.textContent = userData.name;\r\n    jobProfile.textContent = userData.about;\r\n    imageProfile.src = userData.avatar;\r\n\r\n    const newInitialCards = cardsData;\r\n\r\n    newInitialCards.forEach((cardData) => {\r\n      const newCards = createCard(\r\n        cardData,\r\n        imagePopup,\r\n        likeCard,\r\n        myId,\r\n        deleteCard\r\n      );\r\n      placesContainer.append(newCards);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n//Навешываем слушатель на крестик каждого попапа,\r\n//добавляем плавное открытие и закрытие окна,\r\n//добавляем закрытие по клику за пределами попапа\r\nallPopups.forEach((item) => {\r\n  item.classList.add(\"popup_is-animated\");\r\n  item.addEventListener(\"click\", function (evt) {\r\n    if (evt.target.classList.contains(\"popup__close\")) {\r\n      closeModal(item);\r\n    }\r\n  });\r\n  item.addEventListener(\"mousedown\", setClickOnOverlayToCloseModal);\r\n});\r\n\r\n//Слушатель кнопки для редактирование профиля\r\neditProfileButton.addEventListener(\"click\", () => {\r\n  const nameProfileContent = nameProfile.textContent;\r\n  const jobProfileContent = jobProfile.textContent;\r\n\r\n  editProfilePopupButton.textContent = valueForSubmitButtons;\r\n  nameInput.placeholder = nameProfileContent;\r\n  jobInput.placeholder = jobProfileContent;\r\n\r\n  openModal(profilePopup);\r\n  clearValidation(editProfileForm, validationConfig);\r\n  editProfileForm.reset();\r\n});\r\n\r\n//Слушатель кнопки для добавление карточки\r\naddCardButton.addEventListener(\"click\", () => {\r\n  addCardPopupButton.textContent = valueForSubmitButtons;\r\n\r\n  openModal(newCardPopup);\r\n  clearValidation(addCardForm, validationConfig);\r\n});\r\n\r\n//Слушатель для обновления аватара пользователя\r\nimageProfileContainer.addEventListener(\"click\", () => {\r\n  imageProfilePopupButton.textContent = valueForSubmitButtons;\r\n\r\n  openModal(imageProfilePopup);\r\n  clearValidation(editProfileImageForm, validationConfig);\r\n});\r\n\r\n//Функция отправки формы для обновления аватара пользователя\r\nfunction handleProfileImageFormSubmit(evt) {\r\n  const imageLinkInput = editProfileImageForm.elements[\"link\"].value;\r\n\r\n  evt.preventDefault();\r\n\r\n  contentLoading(true, imageProfilePopupButton, valueForLoadingSubmitButtons);\r\n\r\n  imageProfile.src = imageLinkInput;\r\n  const avatarProfile = imageProfile.src;\r\n\r\n  updateImageProfile(avatarProfile, contentLoading, imageProfilePopupButton);\r\n\r\n  closeModal(imageProfilePopup);\r\n\r\n  editProfileImageForm.reset();\r\n}\r\n\r\n//Функция для реализации попапа картинки\r\nfunction imagePopup(item) {\r\n  image.src = item.src;\r\n  image.alt = item.alt;\r\n  imageCaption.textContent = item.alt;\r\n\r\n  openModal(imgPopup);\r\n}\r\n\r\n//Функция отправки формы редактирования профиля\r\nfunction handleProfileFormSumbit(evt) {\r\n  evt.preventDefault();\r\n\r\n  contentLoading(true, editProfilePopupButton, valueForLoadingSubmitButtons);\r\n\r\n  nameProfile.textContent = nameInput.value;\r\n  jobProfile.textContent = jobInput.value;\r\n\r\n  editSelfProfile(\r\n    nameProfile.textContent,\r\n    jobProfile.textContent,\r\n    contentLoading,\r\n    editProfilePopupButton\r\n  );\r\n\r\n  nameInput.value = \"\";\r\n  jobInput.value = \"\";\r\n\r\n  closeModal(profilePopup);\r\n}\r\n\r\n//Функция отправки формы добавления карточки\r\nfunction handleCardFormSubmit(evt) {\r\n  const nameCardInput = addCardNameInput.value;\r\n  const linkCardInput = addCardLinkInput.value;\r\n\r\n  const newCard = {\r\n    name: nameCardInput,\r\n    link: linkCardInput,\r\n  };\r\n\r\n  evt.preventDefault();\r\n\r\n  contentLoading(true, addCardPopupButton, valueForLoadingSubmitButtons);\r\n\r\n  postOwnCard(\r\n    newCard,\r\n    imagePopup,\r\n    likeCard,\r\n    myId,\r\n    deleteCard,\r\n    placesContainer,\r\n    createCard,\r\n    contentLoading,\r\n    addCardPopupButton\r\n  );\r\n\r\n  closeModal(newCardPopup);\r\n\r\n  addCardNameInput.value = \"\";\r\n  addCardLinkInput.value = \"\";\r\n\r\n  addCardForm.reset();\r\n}\r\n\r\n//Функция изменения значения кнопки при загрузке контента\r\nfunction contentLoading(isLoading, button, buttonText) {\r\n  if (isLoading) {\r\n    button.textContent = buttonText;\r\n  }\r\n}\r\n\r\n//Навешивание слушателя на форму редактирования профиля\r\neditProfileForm.addEventListener(\"submit\", handleProfileFormSumbit);\r\n\r\n//Навешивание слушателя на форму добавления карточки\r\naddCardForm.addEventListener(\"submit\", handleCardFormSubmit);\r\n\r\n//Навешивания слушателя на форму обновления аватара профиля\r\neditProfileImageForm.addEventListener(\"submit\", handleProfileImageFormSubmit);\r\n"],"names":["config","baseUrl","headers","authorization","createCard","card","imageFullScreen","likeCard","userId","removeCard","cardElement","document","querySelector","content","cloneNode","cardImage","cardName","cardLikeButton","deleteButton","cardLikesCount","src","link","alt","name","textContent","likes","length","isLikedByMe","some","like","_id","checkLike","classList","add","addEventListener","owner","remove","deleteCard","button","cardId","fetch","concat","method","then","res","ok","json","Promise","reject","status","deleteOwnCard","closest","likeButton","likesCount","contains","data","catch","err","console","log","deleteLike","putLike","openModal","popup","setEscToCloseModal","closeModal","removeEventListener","evt","key","setClickOnOverlayToCloseModal","target","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","inputElement","validity","valid","clearValidation","form","formInputs","querySelectorAll","inputSelector","errorClass","inputErrorClass","errorElements","submitButton","submitButtonSelector","forEach","formInputElement","value","errorElement","placesContainer","editProfileButton","profilePopup","nameProfile","jobProfile","addCardButton","editProfileForm","forms","nameInput","elements","jobInput","description","editProfilePopupButton","newCardPopup","addCardForm","addCardPopupButton","addCardNameInput","addCardLinkInput","allPopups","imgPopup","image","imageCaption","imageProfilePopup","imageProfileContainer","imageProfile","editProfileImageForm","imageProfilePopupButton","valueForSubmitButtons","valueForLoadingSubmitButtons","validationConfig","formSelector","inactiveButtonClass","formList","Array","from","inputClass","inputErrorClassVisible","errorClassVisible","formElement","preventDefault","id","errorMessage","dataset","patternMismatch","setCustomValidity","hideInputError","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","myId","profileConfig","cardsConfig","imagePopup","item","contentLoading","isLoading","buttonText","all","_ref","_ref2","userData","cardsData","about","avatar","cardData","newCards","append","nameProfileContent","jobProfileContent","placeholder","reset","loading","body","JSON","stringify","finally","editSelfProfile","newCard","prepend","postOwnCard","avatarProfile","imageLinkInput"],"sourceRoot":""}